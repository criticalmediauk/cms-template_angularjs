/*-----------------------------------------------------------------------------------*/
/* UTILITIES */
/*-----------------------------------------------------------------------------------*/

/* --------------------- POSITION --------------------- */

@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);
    .position#{$infix}-static { position: static !important; }
    .position#{$infix}-relative { position: relative !important; }
    .position#{$infix}-absolute { position: absolute !important; }
    .position#{$infix}-fixed { position: fixed !important; }
    .position#{$infix}-sticky { position: sticky !important; }
  }
}

/* --------------------- ALIGN --------------------- */

.align-vertical-center {
  position: absolute;
  top: 50%;
  left: 0;
  transform: translateY(-50%);
  z-index: 200;
}


/* --------------------- BORDER --------------------- */

$border-size: 0.1rem !default;
$border-sizes: () !default;
$border-sizes: map-merge(
  (
     1: ($border-size),
     2: ($border-size * 2),
     3: ($border-size * 3),
     4: ($border-size * 4),
     5: ($border-size * 5),
     6: ($border-size * 6),
     7: ($border-size * 7),
     8: ($border-size * 8),
     9: ($border-size * 9),
     10: ($border-size * 10),
     11: ($border-size * 11),
     12: ($border-size * 12),
     13: ($border-size * 13),
     14: ($border-size * 14),
     15: ($border-size * 15),
     16: ($border-size * 16),
     17: ($border-size * 17),
     18: ($border-size * 18),
     19: ($border-size * 19),
     20: ($border-size * 20),
  ),
  $border-sizes
);

@each $prop, $abbrev in (border: b) {
  @each $size, $length in $border-sizes {
    @each $color, $value in $theme-colors {

      .#{$abbrev}-#{$size}-#{$color} { 
        #{$prop}: $length solid $value !important; 
      }
      .#{$abbrev}t-#{$size}-#{$color} {
        #{$prop}-top: $length solid $value !important;
      }
      .#{$abbrev}r-#{$size}-#{$color} {
        #{$prop}-right: $length solid $value !important;
      }
      .#{$abbrev}b-#{$size}-#{$color} {
        #{$prop}-bottom: $length solid $value !important;
      }
      .#{$abbrev}l-#{$size}-#{$color} {
        #{$prop}-left: $length solid $value !important;
      }

    }
  }
}

.bt-0 {
  border-top: 0 solid transparent !important;
}

.bb-0 {
  border-bottom: 0 solid transparent !important;
}

.rounded {
  border-radius: $border-radius !important;
}

.rounded-top {
  border-top-left-radius: $border-radius !important;
  border-top-right-radius: $border-radius !important;
}

.rounded-right {
  border-top-right-radius: $border-radius !important;
  border-bottom-right-radius: $border-radius !important;
}

.rounded-bottom {
  border-bottom-right-radius: $border-radius !important;
  border-bottom-left-radius: $border-radius !important;
}

.rounded-left {
  border-top-left-radius: $border-radius !important;
  border-bottom-left-radius: $border-radius !important;
}

.rounded-circle {
  border-radius: 50% !important;
}

.rounded-0 {
  border-radius: 0 !important;
}


/* --------------------- VISIBILITY --------------------- */

.disabled {
  cursor: not-allowed;
}

@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);
    .overflow#{$infix}-visible  { overflow: visible !important; }
    .overflow#{$infix}-hidden   { overflow: hidden !important; }
  }
}


/* --------------------- TRANSITIONS --------------------- */

$transition-base-lg:      all 0.3s ease-in-out !default;
$transition-base-sm:      all 0.1s ease-in-out !default;

@mixin transition-base {
  @include transition($transition-base-sm);
  @include media-breakpoint-up(sm) {
    @include transition($transition-base-lg);
  }
}

.transition-base {
  @include transition-base;
}


/* --------------------- BACKGROUND --------------------- */

@each $prop, $abbrev in (background-color: bg) {
  @each $color, $value in $theme-colors {

    .#{$abbrev}-#{$color} { 
      #{$prop}: $value !important; 
    }

  }
}


/* --------------------- SHADOWS --------------------- */

// https://tobiasahlin.com/blog/layered-smooth-box-shadows/

@mixin shadow-1 {
  box-shadow: 0 1px 2px rgba(0,0,0,0.07), 
              0 2px 4px rgba(0,0,0,0.07), 
              0 4px 8px rgba(0,0,0,0.07), 
              0 8px 16px rgba(0,0,0,0.07),
              0 16px 32px rgba(0,0,0,0.07), 
              0 32px 64px rgba(0,0,0,0.07);
}

@mixin shadow-2 {
  box-shadow: 0 1px 2px rgba(0,0,0,0.07), 
              0 2px 4px rgba(0,0,0,0.07), 
              0 4px 8px rgba(0,0,0,0.07), 
              0 8px 16px rgba(0,0,0,0.07),
              0 16px 32px rgba(0,0,0,0.07), 
              0 32px 64px rgba(0,0,0,0.07);
}

@mixin shadow-3 {
  box-shadow: 0 1px 1px rgba(0,0,0,0.15), 
              0 2px 2px rgba(0,0,0,0.15), 
              0 4px 4px rgba(0,0,0,0.15), 
              0 8px 8px rgba(0,0,0,0.15);
}

@mixin shadow-4 {
  box-shadow: 0 1px 1px rgba(0,0,0,0.12), 
              0 2px 2px rgba(0,0,0,0.12), 
              0 4px 4px rgba(0,0,0,0.12), 
              0 8px 8px rgba(0,0,0,0.12),
              0 16px 16px rgba(0,0,0,0.12);
}

@mixin shadow-5 {
  box-shadow: 0 1px 1px rgba(0,0,0,0.11), 
              0 2px 2px rgba(0,0,0,0.11), 
              0 4px 4px rgba(0,0,0,0.11), 
              0 8px 8px rgba(0,0,0,0.11), 
              0 16px 16px rgba(0,0,0,0.11), 
              0 32px 32px rgba(0,0,0,0.11);
}

.shadow {

  &-1 {
    @include shadow-1;
  }

  &-2 {
    @include shadow-2;
  }

  &-3 {
    @include shadow-3;
  }

  &-4 {
    @include shadow-4;
  }

  &-5 {
    @include shadow-5;
  }

}


/* --------------------- SROLLBARS --------------------- */

@mixin no-scrollbars {
  -webkit-overflow-scrolling: touch;
  scrollbar-width: none;
  -ms-overflow-style: none;
  overflow: -moz-scrollbars-none;

  &::-webkit-scrollbar {
    display: none;
  }

}

.no-scrollbars {
  @include no-scrollbars;
}


/*-----------------------------------------------------------------------------------*/
/* COMPONENTS */
/*-----------------------------------------------------------------------------------*/

/* --------------------- CHECKBOXES --------------------- */

input[type=checkbox] {
  position: relative;
  cursor: pointer;
  overflow: hidden;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  height: 2.2rem;
  width: 2.2rem;
  display: inline-block;
  vertical-align: text-bottom;
  margin-right: 1rem;
  padding: 0;
  border: 0;
  @include border-radius(0);
}

input[type=checkbox]::after {
  position: relative;
  vertical-align: text-bottom;
  content: "";
  display: block;
  border: 0.1rem solid $input-border-color;
  background-color: $input-bg;
  width: 2.2rem;
  height: 2.2rem;
  @include border-radius ($border-radius);
}

input[type=checkbox]::before {
  position: absolute;
  top: 0;
  font-family: $fontawesome;
  font-weight: 900;
  content: "\f00c";
  display: block;
  font-size: 1.2rem;
  text-indent: 0.6rem;
  line-height: 2.4rem;
  text-align: left;
  width: 2.2rem;
  height: 2.2rem;
  color: transparent;
  z-index: 1;
}

input[type=checkbox]:focus {
  outline: 0;
  outline-offset: 0;
}

input[type=checkbox]:checked::before {
  color: $black;
}


/* --------------------- RADIOS --------------------- */

input[type=radio] {
  position: relative;
  cursor: pointer;
  overflow: hidden;
  @include appearance (none);
  height: 1.5rem;
  width: 1.5rem;
  display: inline-block;
  margin: 0 0.5rem 0 0;
  padding: 0;
  border: 0;
}

input[type=radio]::after {
  position: relative;
  vertical-align: text-bottom;
  margin-right: 1.0rem;
  content: "";
  display: block;
  border: 0.2rem solid $input-border-color;
  background-color: transparent;
  width: 1.5rem;
  height: 1.5rem;
  opacity: 1;
  @include border-radius (50%);
}

input[type=radio]::before {
  position: absolute;
  top: 0;
  content: "";
  display: block;
  width: 1.5rem;
  height: 1.5rem;
  color: transparent;
  z-index: 1;
  border: 0.2rem solid transparent;
  @include border-radius (50%);
}

input[type=radio]:focus {
  outline: 0;
  outline-offset: 0;
}

input[type=radio]:checked::after {
  opacity: 0;
}

input[type=radio]:checked::before {
  background-color: $black;
  border-color: $black;
}


/* ----- RADIO GROUP ----- */

.radio__group {
  text-align: left;
  position: relative;
  margin-bottom: 2rem;

  input {
    position: absolute;
    margin: 0;
    right: 2rem;
    top: 50%;
    transform: translateY(-50%);
  }

  label {
    position: relative;
    margin: 0;
    cursor: pointer;
    width: 100%;
    padding: 1rem 2rem;
    border: 0.2rem solid $input-border-color;
  }

  input:checked ~ label {
    color: $black;
    border-color: $black;
  }

}


/* --------------------- TABLE SORT ARROWS --------------------- */

@mixin th-arrow {
  position: absolute;
  left: 0;
  font-family: $fontawesome;
  font-weight: 900;
  display: block;
  line-height: 0.4rem;
}

.table {

  thead {

    th {

      &.sort {
        cursor: pointer;

        .sort-icons {
          width: 1rem;
          height: 1.1rem;
          position: relative;
          display: inline-block;
          margin-right: 0.5rem;

          &::before, &::after {
            @include th-arrow;
          }
  
          &::before {
            top: 0;
            // content: '\f0de'; //<i class="fas fa-sort-up"></i>
            content: '\f0d8'; //<i class="fas fa-caret-up"></i>

          }
  
          &::after {
            bottom: 0;
            // content: '\f0dd'; //<i class="fas fa-sort-down"></i>
            content: '\f0d7'; //<i class="fas fa-caret-down"></i>
          }

        }

        &-desc {

          .sort-icons {
          
            &::before {
              color: $blue;
            }

          }

        }

        &-asc {

          .sort-icons {
          
            &::after {
              color: $blue;
            }

          }

        }

      }

    }

  }

}


/* --------------------- FORM VALIDATION --------------------- */

form {

  .help-block {
    // position: absolute;
    // bottom: 0;
    // right: 1.5rem;
    color: $red;
    font-size: 1.2rem;
    display: block;
    //width: 100%;
    text-align: left;
    // opacity: 0;
    padding: 0.5rem 0;
  }

}