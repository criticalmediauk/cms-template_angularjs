/*-----------------------------------------------------------------------------------*/
/* POSITION */
/*-----------------------------------------------------------------------------------*/

@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);
    .position#{$infix}-static { position: static !important; }
    .position#{$infix}-relative { position: relative !important; }
    .position#{$infix}-absolute { position: absolute !important; }
    .position#{$infix}-fixed { position: fixed !important; }
    .position#{$infix}-sticky { position: sticky !important; }
  }
}


/*-----------------------------------------------------------------------------------*/
/* ALIGN */
/*-----------------------------------------------------------------------------------*/

.align-vertical-center {
  position: absolute;
  top: 50%;
  left: 0;
  transform: translateY(-50%);
  z-index: 200;
}


/*-----------------------------------------------------------------------------------*/
/* BORDER */
/*-----------------------------------------------------------------------------------*/

$border-size: 0.1rem !default;
$border-sizes: () !default;
$border-sizes: map-merge(
  (
     1: ($border-size),
     2: ($border-size * 2),
     3: ($border-size * 3),
     4: ($border-size * 4),
     5: ($border-size * 5),
     6: ($border-size * 6),
     7: ($border-size * 7),
     8: ($border-size * 8),
     9: ($border-size * 9),
     10: ($border-size * 10),
     11: ($border-size * 11),
     12: ($border-size * 12),
     13: ($border-size * 13),
     14: ($border-size * 14),
     15: ($border-size * 15),
     16: ($border-size * 16),
     17: ($border-size * 17),
     18: ($border-size * 18),
     19: ($border-size * 19),
     20: ($border-size * 20),
  ),
  $border-sizes
);

@each $prop, $abbrev in (border: b) {
  @each $size, $length in $border-sizes {
    @each $color, $value in $theme-colors {

      .#{$abbrev}-#{$size}-#{$color} { 
        #{$prop}: $length solid $value !important; 
      }
      .#{$abbrev}t-#{$size}-#{$color} {
        #{$prop}-top: $length solid $value !important;
      }
      .#{$abbrev}r-#{$size}-#{$color} {
        #{$prop}-right: $length solid $value !important;
      }
      .#{$abbrev}b-#{$size}-#{$color} {
        #{$prop}-bottom: $length solid $value !important;
      }
      .#{$abbrev}l-#{$size}-#{$color} {
        #{$prop}-left: $length solid $value !important;
      }

    }
  }
}

.bt-0 {
  border-top: 0 solid transparent !important;
}

.bb-0 {
  border-bottom: 0 solid transparent !important;
}

.rounded {
  border-radius: $border-radius !important;
}

.rounded-top {
  border-top-left-radius: $border-radius !important;
  border-top-right-radius: $border-radius !important;
}

.rounded-right {
  border-top-right-radius: $border-radius !important;
  border-bottom-right-radius: $border-radius !important;
}

.rounded-bottom {
  border-bottom-right-radius: $border-radius !important;
  border-bottom-left-radius: $border-radius !important;
}

.rounded-left {
  border-top-left-radius: $border-radius !important;
  border-bottom-left-radius: $border-radius !important;
}

.rounded-circle {
  border-radius: 50% !important;
}

.rounded-0 {
  border-radius: 0 !important;
}


/*-----------------------------------------------------------------------------------*/
/* IMAGE - USED FROM BOOTSTRAP > IMAGES.SCSS */
/*-----------------------------------------------------------------------------------*/

@mixin img-fluid {
  max-width: 100%;
  height: auto;
}

.img-fluid {
  @include img-fluid;
}

/* ----- CUSTOM ----- */

// .img-background {
//   @include background-size (cover);
//   background-position: center center;
//   background-repeat: no-repeat;

//   img {
//     display: none !important;
//   }

// }


/* --------------------- FIGURE --------------------- */

.figure {
  display: inline-block;
}

.figure-img {
  margin-bottom: 0.5rem;
  line-height: 1;
}

// .figure-caption {
//   color: $color-grey;
// }


/*-----------------------------------------------------------------------------------*/
/* VISIBILITY - USED FROM BOOTSTRAP > UTILITIES > VISIBILITY.SCSS */
/*-----------------------------------------------------------------------------------*/

@mixin invisible($visibility) {
  visibility: $visibility !important;
}

.visible {
  @include invisible(visible);
}

.invisible {
  @include invisible(hidden);
}

/* ----- CUSTOM ----- */

.disabled {
  cursor: not-allowed;
}

@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);
    .overflow#{$infix}-visible  { overflow: visible !important; }
    .overflow#{$infix}-hidden   { overflow: hidden !important; }
  }
}


/*-----------------------------------------------------------------------------------*/
/* TRANSITIONS */
/*-----------------------------------------------------------------------------------*/

$transition-base-lg:      all 0.3s ease-in-out !default;
$transition-base-sm:      all 0.1s ease-in-out !default;

@mixin transition-base {
  @include transition($transition-base-sm);
  @include media-breakpoint-up(sm) {
    @include transition($transition-base-lg);
  }
}

.transition-base {
  @include transition-base;
}


/*-----------------------------------------------------------------------------------*/
/* BACKGROUND */
/*-----------------------------------------------------------------------------------*/

@each $prop, $abbrev in (background-color: bg) {
  @each $color, $value in $theme-colors {

    .#{$abbrev}-#{$color} { 
      #{$prop}: $value !important; 
    }

  }
}

/*-----------------------------------------------------------------------------------*/
/* SHADOWS */
/*-----------------------------------------------------------------------------------*/

// https://tobiasahlin.com/blog/layered-smooth-box-shadows/

@mixin shadow-1 {
  box-shadow: 0 1px 2px rgba(0,0,0,0.07), 
              0 2px 4px rgba(0,0,0,0.07), 
              0 4px 8px rgba(0,0,0,0.07), 
              0 8px 16px rgba(0,0,0,0.07),
              0 16px 32px rgba(0,0,0,0.07), 
              0 32px 64px rgba(0,0,0,0.07);
}

@mixin shadow-2 {
  box-shadow: 0 1px 2px rgba(0,0,0,0.07), 
              0 2px 4px rgba(0,0,0,0.07), 
              0 4px 8px rgba(0,0,0,0.07), 
              0 8px 16px rgba(0,0,0,0.07),
              0 16px 32px rgba(0,0,0,0.07), 
              0 32px 64px rgba(0,0,0,0.07);
}

@mixin shadow-3 {
  box-shadow: 0 1px 1px rgba(0,0,0,0.15), 
              0 2px 2px rgba(0,0,0,0.15), 
              0 4px 4px rgba(0,0,0,0.15), 
              0 8px 8px rgba(0,0,0,0.15);
}

@mixin shadow-4 {
  box-shadow: 0 1px 1px rgba(0,0,0,0.12), 
              0 2px 2px rgba(0,0,0,0.12), 
              0 4px 4px rgba(0,0,0,0.12), 
              0 8px 8px rgba(0,0,0,0.12),
              0 16px 16px rgba(0,0,0,0.12);
}

@mixin shadow-5 {
  box-shadow: 0 1px 1px rgba(0,0,0,0.11), 
              0 2px 2px rgba(0,0,0,0.11), 
              0 4px 4px rgba(0,0,0,0.11), 
              0 8px 8px rgba(0,0,0,0.11), 
              0 16px 16px rgba(0,0,0,0.11), 
              0 32px 32px rgba(0,0,0,0.11);
}

.shadow {

  &-1 {
    @include shadow-1;
  }

  &-2 {
    @include shadow-2;
  }

  &-3 {
    @include shadow-3;
  }

  &-4 {
    @include shadow-4;
  }

  &-5 {
    @include shadow-5;
  }

}


/*-----------------------------------------------------------------------------------*/
/* SROLLBARS */
/*-----------------------------------------------------------------------------------*/

@mixin no-scrollbars {
  -webkit-overflow-scrolling: touch;
  scrollbar-width: none;
  -ms-overflow-style: none;
  overflow: -moz-scrollbars-none;

  &::-webkit-scrollbar {
    display: none;
  }

}

.no-scrollbars {
  @include no-scrollbars;
}


/*-----------------------------------------------------------------------------------*/
/* UI BOOTSTRAP MODAL OVERRIDES */
/*-----------------------------------------------------------------------------------*/

.fade.in {
  opacity: 1;
}

.modal.in .modal-dialog {
  -webkit-transform: translate(0, 0);
  -o-transform: translate(0, 0);
  transform: translate(0, 0);
}

.modal-backdrop .fade .in {
  opacity: 0.5 !important;
}

.modal-backdrop.fade {
  opacity: 0.5 !important;
}


/*-----------------------------------------------------------------------------------*/
/* UI BOOTSTRAP PAGINATION OVERRIDES */
/*-----------------------------------------------------------------------------------*/

@mixin pagination-page {
  position: relative;
  display: block;
  margin-left: -$pagination-border-width;
  border: $pagination-border-width solid $pagination-border-color;
}

@mixin pagination-link {
  display: block;
  padding: $pagination-padding-y $pagination-padding-x;
  line-height: $pagination-line-height;
  color: $pagination-color;
  background-color: $pagination-bg;

  &:hover {
    z-index: 2;
    color: $pagination-hover-color;
    text-decoration: none;
    background-color: $pagination-hover-bg;
    border-color: $pagination-hover-border-color;
  }

  &:focus {
    z-index: 2;
    outline: $pagination-focus-outline;
    box-shadow: $pagination-focus-box-shadow;
  }

}

.pagination {
  
  .pagination-page {
    @include pagination-page;

    a {
      @include pagination-link;
    }
  
    &.active a {
      z-index: 1;
      color: $pagination-active-color;
      background-color: $pagination-active-bg;
      border-color: $pagination-active-border-color;
    }
  
    &.disabled a {
      color: $pagination-disabled-color;
      pointer-events: none;
      cursor: auto;
      background-color: $pagination-disabled-bg;
      border-color: $pagination-disabled-border-color;
    }

  }

  .pagination-prev {
    @include pagination-page;
    @include border-left-radius($border-radius);

    a {
      @include pagination-link;
    }

  }

  .pagination-next {
    @include pagination-page;
    @include border-right-radius($border-radius);

    a {
      @include pagination-link;
    }

  }

}